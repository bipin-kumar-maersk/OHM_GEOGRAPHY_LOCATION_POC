/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.maersk.Geography.smds.operations.MSK;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
/** Geography BDA Location details */
@org.apache.avro.specific.AvroGenerated
public class GeographyBDALocationDetails extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 5793736022882873579L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"GeographyBDALocationDetails\",\"namespace\":\"com.maersk.Geography.smds.operations.MSK\",\"doc\":\"Geography BDA Location details\",\"fields\":[{\"name\":\"bdaLocRowid\",\"type\":[\"null\",\"string\"]},{\"name\":\"Name\",\"type\":[\"null\",\"string\"]},{\"name\":\"Type\",\"type\":[\"null\",\"string\"]},{\"name\":\"GeographyBDALocationAlternateCodeDetails\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"GeographyBDALocationAlternateCode\",\"doc\":\"Geography BDALocation AlternateCode details\",\"fields\":[{\"name\":\"CodeType\",\"type\":[\"null\",\"string\"]},{\"name\":\"Code\",\"type\":[\"null\",\"string\"]}]}}]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<GeographyBDALocationDetails> ENCODER =
      new BinaryMessageEncoder<GeographyBDALocationDetails>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<GeographyBDALocationDetails> DECODER =
      new BinaryMessageDecoder<GeographyBDALocationDetails>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<GeographyBDALocationDetails> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<GeographyBDALocationDetails> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<GeographyBDALocationDetails>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this GeographyBDALocationDetails to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a GeographyBDALocationDetails from a ByteBuffer. */
  public static GeographyBDALocationDetails fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.CharSequence bdaLocRowid;
  @Deprecated public java.lang.CharSequence Name;
  @Deprecated public java.lang.CharSequence Type;
  @Deprecated public java.util.List<com.maersk.Geography.smds.operations.MSK.GeographyBDALocationAlternateCode> GeographyBDALocationAlternateCodeDetails;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public GeographyBDALocationDetails() {}

  /**
   * All-args constructor.
   * @param bdaLocRowid The new value for bdaLocRowid
   * @param Name The new value for Name
   * @param Type The new value for Type
   * @param GeographyBDALocationAlternateCodeDetails The new value for GeographyBDALocationAlternateCodeDetails
   */
  public GeographyBDALocationDetails(java.lang.CharSequence bdaLocRowid, java.lang.CharSequence Name, java.lang.CharSequence Type, java.util.List<com.maersk.Geography.smds.operations.MSK.GeographyBDALocationAlternateCode> GeographyBDALocationAlternateCodeDetails) {
    this.bdaLocRowid = bdaLocRowid;
    this.Name = Name;
    this.Type = Type;
    this.GeographyBDALocationAlternateCodeDetails = GeographyBDALocationAlternateCodeDetails;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return bdaLocRowid;
    case 1: return Name;
    case 2: return Type;
    case 3: return GeographyBDALocationAlternateCodeDetails;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: bdaLocRowid = (java.lang.CharSequence)value$; break;
    case 1: Name = (java.lang.CharSequence)value$; break;
    case 2: Type = (java.lang.CharSequence)value$; break;
    case 3: GeographyBDALocationAlternateCodeDetails = (java.util.List<com.maersk.Geography.smds.operations.MSK.GeographyBDALocationAlternateCode>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'bdaLocRowid' field.
   * @return The value of the 'bdaLocRowid' field.
   */
  public java.lang.CharSequence getBdaLocRowid() {
    return bdaLocRowid;
  }

  /**
   * Sets the value of the 'bdaLocRowid' field.
   * @param value the value to set.
   */
  public void setBdaLocRowid(java.lang.CharSequence value) {
    this.bdaLocRowid = value;
  }

  /**
   * Gets the value of the 'Name' field.
   * @return The value of the 'Name' field.
   */
  public java.lang.CharSequence getName() {
    return Name;
  }

  /**
   * Sets the value of the 'Name' field.
   * @param value the value to set.
   */
  public void setName(java.lang.CharSequence value) {
    this.Name = value;
  }

  /**
   * Gets the value of the 'Type' field.
   * @return The value of the 'Type' field.
   */
  public java.lang.CharSequence getType() {
    return Type;
  }

  /**
   * Sets the value of the 'Type' field.
   * @param value the value to set.
   */
  public void setType(java.lang.CharSequence value) {
    this.Type = value;
  }

  /**
   * Gets the value of the 'GeographyBDALocationAlternateCodeDetails' field.
   * @return The value of the 'GeographyBDALocationAlternateCodeDetails' field.
   */
  public java.util.List<com.maersk.Geography.smds.operations.MSK.GeographyBDALocationAlternateCode> getGeographyBDALocationAlternateCodeDetails() {
    return GeographyBDALocationAlternateCodeDetails;
  }

  /**
   * Sets the value of the 'GeographyBDALocationAlternateCodeDetails' field.
   * @param value the value to set.
   */
  public void setGeographyBDALocationAlternateCodeDetails(java.util.List<com.maersk.Geography.smds.operations.MSK.GeographyBDALocationAlternateCode> value) {
    this.GeographyBDALocationAlternateCodeDetails = value;
  }

  /**
   * Creates a new GeographyBDALocationDetails RecordBuilder.
   * @return A new GeographyBDALocationDetails RecordBuilder
   */
  public static com.maersk.Geography.smds.operations.MSK.GeographyBDALocationDetails.Builder newBuilder() {
    return new com.maersk.Geography.smds.operations.MSK.GeographyBDALocationDetails.Builder();
  }

  /**
   * Creates a new GeographyBDALocationDetails RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new GeographyBDALocationDetails RecordBuilder
   */
  public static com.maersk.Geography.smds.operations.MSK.GeographyBDALocationDetails.Builder newBuilder(com.maersk.Geography.smds.operations.MSK.GeographyBDALocationDetails.Builder other) {
    return new com.maersk.Geography.smds.operations.MSK.GeographyBDALocationDetails.Builder(other);
  }

  /**
   * Creates a new GeographyBDALocationDetails RecordBuilder by copying an existing GeographyBDALocationDetails instance.
   * @param other The existing instance to copy.
   * @return A new GeographyBDALocationDetails RecordBuilder
   */
  public static com.maersk.Geography.smds.operations.MSK.GeographyBDALocationDetails.Builder newBuilder(com.maersk.Geography.smds.operations.MSK.GeographyBDALocationDetails other) {
    return new com.maersk.Geography.smds.operations.MSK.GeographyBDALocationDetails.Builder(other);
  }

  /**
   * RecordBuilder for GeographyBDALocationDetails instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<GeographyBDALocationDetails>
    implements org.apache.avro.data.RecordBuilder<GeographyBDALocationDetails> {

    private java.lang.CharSequence bdaLocRowid;
    private java.lang.CharSequence Name;
    private java.lang.CharSequence Type;
    private java.util.List<com.maersk.Geography.smds.operations.MSK.GeographyBDALocationAlternateCode> GeographyBDALocationAlternateCodeDetails;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.maersk.Geography.smds.operations.MSK.GeographyBDALocationDetails.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.bdaLocRowid)) {
        this.bdaLocRowid = data().deepCopy(fields()[0].schema(), other.bdaLocRowid);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.Name)) {
        this.Name = data().deepCopy(fields()[1].schema(), other.Name);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.Type)) {
        this.Type = data().deepCopy(fields()[2].schema(), other.Type);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.GeographyBDALocationAlternateCodeDetails)) {
        this.GeographyBDALocationAlternateCodeDetails = data().deepCopy(fields()[3].schema(), other.GeographyBDALocationAlternateCodeDetails);
        fieldSetFlags()[3] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing GeographyBDALocationDetails instance
     * @param other The existing instance to copy.
     */
    private Builder(com.maersk.Geography.smds.operations.MSK.GeographyBDALocationDetails other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.bdaLocRowid)) {
        this.bdaLocRowid = data().deepCopy(fields()[0].schema(), other.bdaLocRowid);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.Name)) {
        this.Name = data().deepCopy(fields()[1].schema(), other.Name);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.Type)) {
        this.Type = data().deepCopy(fields()[2].schema(), other.Type);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.GeographyBDALocationAlternateCodeDetails)) {
        this.GeographyBDALocationAlternateCodeDetails = data().deepCopy(fields()[3].schema(), other.GeographyBDALocationAlternateCodeDetails);
        fieldSetFlags()[3] = true;
      }
    }

    /**
      * Gets the value of the 'bdaLocRowid' field.
      * @return The value.
      */
    public java.lang.CharSequence getBdaLocRowid() {
      return bdaLocRowid;
    }

    /**
      * Sets the value of the 'bdaLocRowid' field.
      * @param value The value of 'bdaLocRowid'.
      * @return This builder.
      */
    public com.maersk.Geography.smds.operations.MSK.GeographyBDALocationDetails.Builder setBdaLocRowid(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.bdaLocRowid = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'bdaLocRowid' field has been set.
      * @return True if the 'bdaLocRowid' field has been set, false otherwise.
      */
    public boolean hasBdaLocRowid() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'bdaLocRowid' field.
      * @return This builder.
      */
    public com.maersk.Geography.smds.operations.MSK.GeographyBDALocationDetails.Builder clearBdaLocRowid() {
      bdaLocRowid = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'Name' field.
      * @return The value.
      */
    public java.lang.CharSequence getName() {
      return Name;
    }

    /**
      * Sets the value of the 'Name' field.
      * @param value The value of 'Name'.
      * @return This builder.
      */
    public com.maersk.Geography.smds.operations.MSK.GeographyBDALocationDetails.Builder setName(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.Name = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'Name' field has been set.
      * @return True if the 'Name' field has been set, false otherwise.
      */
    public boolean hasName() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'Name' field.
      * @return This builder.
      */
    public com.maersk.Geography.smds.operations.MSK.GeographyBDALocationDetails.Builder clearName() {
      Name = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'Type' field.
      * @return The value.
      */
    public java.lang.CharSequence getType() {
      return Type;
    }

    /**
      * Sets the value of the 'Type' field.
      * @param value The value of 'Type'.
      * @return This builder.
      */
    public com.maersk.Geography.smds.operations.MSK.GeographyBDALocationDetails.Builder setType(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.Type = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'Type' field has been set.
      * @return True if the 'Type' field has been set, false otherwise.
      */
    public boolean hasType() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'Type' field.
      * @return This builder.
      */
    public com.maersk.Geography.smds.operations.MSK.GeographyBDALocationDetails.Builder clearType() {
      Type = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'GeographyBDALocationAlternateCodeDetails' field.
      * @return The value.
      */
    public java.util.List<com.maersk.Geography.smds.operations.MSK.GeographyBDALocationAlternateCode> getGeographyBDALocationAlternateCodeDetails() {
      return GeographyBDALocationAlternateCodeDetails;
    }

    /**
      * Sets the value of the 'GeographyBDALocationAlternateCodeDetails' field.
      * @param value The value of 'GeographyBDALocationAlternateCodeDetails'.
      * @return This builder.
      */
    public com.maersk.Geography.smds.operations.MSK.GeographyBDALocationDetails.Builder setGeographyBDALocationAlternateCodeDetails(java.util.List<com.maersk.Geography.smds.operations.MSK.GeographyBDALocationAlternateCode> value) {
      validate(fields()[3], value);
      this.GeographyBDALocationAlternateCodeDetails = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'GeographyBDALocationAlternateCodeDetails' field has been set.
      * @return True if the 'GeographyBDALocationAlternateCodeDetails' field has been set, false otherwise.
      */
    public boolean hasGeographyBDALocationAlternateCodeDetails() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'GeographyBDALocationAlternateCodeDetails' field.
      * @return This builder.
      */
    public com.maersk.Geography.smds.operations.MSK.GeographyBDALocationDetails.Builder clearGeographyBDALocationAlternateCodeDetails() {
      GeographyBDALocationAlternateCodeDetails = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public GeographyBDALocationDetails build() {
      try {
        GeographyBDALocationDetails record = new GeographyBDALocationDetails();
        record.bdaLocRowid = fieldSetFlags()[0] ? this.bdaLocRowid : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.Name = fieldSetFlags()[1] ? this.Name : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.Type = fieldSetFlags()[2] ? this.Type : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.GeographyBDALocationAlternateCodeDetails = fieldSetFlags()[3] ? this.GeographyBDALocationAlternateCodeDetails : (java.util.List<com.maersk.Geography.smds.operations.MSK.GeographyBDALocationAlternateCode>) defaultValue(fields()[3]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<GeographyBDALocationDetails>
    WRITER$ = (org.apache.avro.io.DatumWriter<GeographyBDALocationDetails>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<GeographyBDALocationDetails>
    READER$ = (org.apache.avro.io.DatumReader<GeographyBDALocationDetails>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
